// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`t helper Should match the snapshot 1`] = `
Object {
  "AnyArrayType": [Function],
  "AnyDictionaryType": [Function],
  "AnyType": [Function],
  "Array": AnyArrayType {
    "_tag": "AnyArrayType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "UnknownArray",
    "validate": [Function],
  },
  "ArrayType": [Function],
  "BigIntType": [Function],
  "BooleanType": [Function],
  "Dictionary": AnyDictionaryType {
    "_tag": "AnyDictionaryType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "UnknownRecord",
    "validate": [Function],
  },
  "DictionaryType": [Function],
  "ExactType": [Function],
  "Function": FunctionType {
    "_tag": "FunctionType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "Function",
    "validate": [Function],
  },
  "FunctionType": [Function],
  "Int": RefinementType {
    "_tag": "RefinementType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "Int",
    "predicate": [Function],
    "type": NumberType {
      "_tag": "NumberType",
      "decode": [Function],
      "encode": [Function],
      "is": [Function],
      "name": "number",
      "validate": [Function],
    },
    "validate": [Function],
  },
  "Integer": RefinementType {
    "_tag": "RefinementType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "Integer",
    "predicate": [Function],
    "type": NumberType {
      "_tag": "NumberType",
      "decode": [Function],
      "encode": [Function],
      "is": [Function],
      "name": "number",
      "validate": [Function],
    },
    "validate": [Function],
  },
  "InterfaceType": [Function],
  "IntersectionType": [Function],
  "KeyofType": [Function],
  "LiteralType": [Function],
  "NeverType": [Function],
  "NullType": [Function],
  "NumberType": [Function],
  "ObjectType": [Function],
  "PartialType": [Function],
  "ReadonlyArrayType": [Function],
  "ReadonlyType": [Function],
  "RecursiveType": [Function],
  "RefinementType": [Function],
  "StrictType": [Function],
  "StringType": [Function],
  "TaggedUnionType": [Function],
  "TupleType": [Function],
  "Type": [Function],
  "UndefinedType": [Function],
  "UnionType": [Function],
  "UnknownArray": AnyArrayType {
    "_tag": "AnyArrayType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "UnknownArray",
    "validate": [Function],
  },
  "UnknownRecord": AnyDictionaryType {
    "_tag": "AnyDictionaryType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "UnknownRecord",
    "validate": [Function],
  },
  "UnknownType": [Function],
  "VoidType": [Function],
  "alias": [Function],
  "any": AnyType {
    "_tag": "AnyType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "any",
    "validate": [Function],
  },
  "appendContext": [Function],
  "array": [Function],
  "bigint": BigIntType {
    "_tag": "BigIntType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "bigint",
    "validate": [Function],
  },
  "boolean": BooleanType {
    "_tag": "BooleanType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "boolean",
    "validate": [Function],
  },
  "brand": [Function],
  "clean": [Function],
  "dictionary": [Function],
  "emptyTags": Object {},
  "exact": [Function],
  "failure": [Function],
  "failures": [Function],
  "getContextEntry": [Function],
  "getDefaultContext": [Function],
  "getDomainKeys": [Function],
  "getFunctionName": [Function],
  "getIndex": [Function],
  "getTags": [Function],
  "getValidationError": [Function],
  "identity": [Function],
  "interface": [Function],
  "intersection": [Function],
  "keyof": [Function],
  "literal": [Function],
  "never": NeverType {
    "_tag": "NeverType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "never",
    "validate": [Function],
  },
  "null": NullType {
    "_tag": "NullType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "null",
    "validate": [Function],
  },
  "nullType": NullType {
    "_tag": "NullType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "null",
    "validate": [Function],
  },
  "number": NumberType {
    "_tag": "NumberType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "number",
    "validate": [Function],
  },
  "object": ObjectType {
    "_tag": "ObjectType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "object",
    "validate": [Function],
  },
  "partial": [Function],
  "readonly": [Function],
  "readonlyArray": [Function],
  "record": [Function],
  "recursion": [Function],
  "refinement": [Function],
  "strict": [Function],
  "string": StringType {
    "_tag": "StringType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "string",
    "validate": [Function],
  },
  "success": [Function],
  "taggedUnion": [Function],
  "tuple": [Function],
  "type": [Function],
  "undefined": UndefinedType {
    "_tag": "UndefinedType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "undefined",
    "validate": [Function],
  },
  "union": [Function],
  "unknown": UnknownType {
    "_tag": "UnknownType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "unknown",
    "validate": [Function],
  },
  "void": VoidType {
    "_tag": "VoidType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "void",
    "validate": [Function],
  },
  "voidType": VoidType {
    "_tag": "VoidType",
    "decode": [Function],
    "encode": [Function],
    "is": [Function],
    "name": "void",
    "validate": [Function],
  },
}
`;
