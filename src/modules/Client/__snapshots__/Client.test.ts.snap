// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`A Client Its API When executing an operation When the response status is not declared The operation should throw and error: Missing Model Error 1`] = `[Error: Unexpected response without declaration. Status: 333, data: {"ok":true}]`;

exports[`A Client Should match the snapshot: sample client 1`] = `
Client {
  "axiosInstance": Object {
    "create": [Function],
    "nextResponse": Object {},
    "request": [Function],
  },
  "base": [Function],
  "debug": false,
  "globalResponses": Array [
    ApiResponse {
      "model": Model {
        "base": InterfaceType {
          "_tag": "InterfaceType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "{ ok: false }",
          "props": Object {
            "ok": LiteralType {
              "_tag": "LiteralType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "false",
              "validate": [Function],
              "value": false,
            },
          },
          "validate": [Function],
        },
        "name": "API 500 resource",
        "operation": "",
        "samples": Object {},
        "schema": InterfaceType {
          "_tag": "InterfaceType",
          "decode": [Function],
          "encode": [Function],
          "is": [Function],
          "name": "{ ok: false }",
          "props": Object {
            "ok": LiteralType {
              "_tag": "LiteralType",
              "decode": [Function],
              "encode": [Function],
              "is": [Function],
              "name": "false",
              "validate": [Function],
              "value": false,
            },
          },
          "validate": [Function],
        },
      },
      "status": 500,
    },
  ],
  "resources": Object {
    "extraResource": Resource {
      "basePath": "",
      "operations": Object {
        "getOk": Operation {
          "method": "GET",
          "name": "getOk",
          "responses": Array [
            ApiResponse {
              "model": Model {
                "base": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ ok: boolean }",
                  "props": Object {
                    "ok": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
                "name": "API sample resource",
                "operation": "getOk",
                "samples": Object {},
                "schema": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ ok: boolean }",
                  "props": Object {
                    "ok": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
              },
              "status": 200,
            },
          ],
          "url": [Function],
        },
      },
    },
    "samples": Resource {
      "basePath": "/samples",
      "operations": Object {
        "getOk": Operation {
          "method": "GET",
          "name": "getOk",
          "responses": Array [
            ApiResponse {
              "model": Model {
                "base": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ ok: boolean }",
                  "props": Object {
                    "ok": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
                "name": "API sample resource",
                "operation": "getOk",
                "samples": Object {},
                "schema": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ ok: boolean }",
                  "props": Object {
                    "ok": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
              },
              "status": 200,
            },
          ],
          "url": [Function],
        },
        "getSample": Operation {
          "method": "GET",
          "name": "getSample",
          "options": Object {},
          "responses": Array [
            ApiResponse {
              "model": Model {
                "base": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ ok: boolean }",
                  "props": Object {
                    "ok": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
                "name": "API sample resource",
                "operation": "getOk",
                "samples": Object {},
                "schema": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ ok: boolean }",
                  "props": Object {
                    "ok": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
              },
              "status": 200,
            },
            ApiResponse {
              "model": Model {
                "base": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ accepted: boolean }",
                  "props": Object {
                    "accepted": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
                "name": "API sample resource",
                "operation": "getSample",
                "samples": Object {},
                "schema": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ accepted: boolean }",
                  "props": Object {
                    "accepted": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
              },
              "status": 202,
            },
          ],
          "url": [Function],
        },
        "withMock": Operation {
          "method": "GET",
          "mock": [Function],
          "name": "withMock",
          "responses": Array [
            ApiResponse {
              "model": Model {
                "base": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ ok: boolean }",
                  "props": Object {
                    "ok": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
                "name": "API sample resource",
                "operation": "getOk",
                "samples": Object {},
                "schema": InterfaceType {
                  "_tag": "InterfaceType",
                  "decode": [Function],
                  "encode": [Function],
                  "is": [Function],
                  "name": "{ ok: boolean }",
                  "props": Object {
                    "ok": BooleanType {
                      "_tag": "BooleanType",
                      "decode": [Function],
                      "encode": [Function],
                      "is": [Function],
                      "name": "boolean",
                      "validate": [Function],
                    },
                  },
                  "validate": [Function],
                },
              },
              "status": 200,
            },
          ],
          "url": [Function],
        },
      },
    },
  },
  "strictTypes": false,
  "throwErrors": false,
}
`;
